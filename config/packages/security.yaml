security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\InternalUser:
            algorithm: auto
        App\Entity\Invitee:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_internal_user_provider:
            entity:
                class: App\Entity\InternalUser
                property: email
        app_invitee_provider:
            entity:
                class: App\Entity\Invitee
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        invitee:
            pattern: ^/invitee
            lazy: true
            provider: app_invitee_provider
            custom_authenticator:
                - App\Security\Authentication\InviteeAuthenticator
            entry_point: form_login
            form_login:
                login_path: invitee_login
                check_path: invitee_login
            logout:
                path: invitee_logout
            # where to redirect after logout
            # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
        main:
            lazy: true
            provider: app_internal_user_provider
            custom_authenticator:
                - App\Security\Authentication\InternalUserAuthenticator
            entry_point: form_login
            form_login:
                login_path: app_login
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            remember_me:
                secret: '%kernel.secret%' # required
                lifetime: 604800 # 1 week in seconds

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/internal, roles:
            [
                ROLE_INTERNAL_VIEWER,
                ROLE_INTERNAL_ADMIN,
                ROLE_SUPER_ADMIN
            ]
        }
        - { path: ^/invitee/view_invite, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/invitee/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/invitee/logout, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/invitee/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/invitee/sign-up, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/invitee, roles: [ ROLE_INVITEE ] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
