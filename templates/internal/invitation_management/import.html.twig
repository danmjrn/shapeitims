{% extends 'internal_admin.html.twig' %}

{% block title %}{{ 'Lesy & Lens\'s Invitation Management System | Invitation Management - Import Invitees' }}{% endblock %}

{% block body %}
    <div class="content-body">
        <div class="container-fluid">
            <div class="page-titles">
                <h4>{{ 'Invitation Management - Import Invitees' }}</h4>
            </div>
            <!-- row class="form-valide" -->
            <div class="row">
                <div class="col-xl-12 col-xxl-12">
                    <div class="card">
                        <div class="card-header">
                            <h4 class="card-title">{{ 'Import Invitees' }}</h4>
                        </div>
                        <div class="card-body" >
{#                            <form method="get" id="form" action="{{ path('upload_invitees')  }}">#}
{#                            <input type="file"#}
{#                                   id="xlsx"#}
{#                                   class="filepond"#}
{#                                   name="inviteesFile"#}
{#                                   data-allow-reorder="true"#}
{#                                   data-max-file-size="3MB"#}
{#                                   data-max-files="3"#}
{#                            >#}
{#                            <div class="text-center">#}
{#                                <button type="submit" class="btn btn-success" id="btnFinish">{{ 'Import Invitation' }}</button>#}
{#                                <button class="btn btn-danger" id="btnCancel" onclick="{{ 'window.location.href="'~path('invitation_management')~'"' }}">Cancel</button>#}
{#                            </div>#}
{#                            </form>#}

                            {{ form_start(importInviteesForm) }}
                            {{ form_widget(importInviteesForm.inviteeImportForm) }}
                            <div class="text-center">
                                <button type="submit" class="btn btn-success" id="btnFinish">{{ 'Import Invitation' }}</button>
                                <button class="btn btn-danger" id="btnCancel" onclick="{{ 'window.location.href="'~path('invitation_management')~'"' }}">Cancel</button>
                            </div>
                            {{ form_end(importInviteesForm) }}

                        </div>
                    </div>
                </div>
            </div>

            <button class="btn btn-primary shadow btn-xs sharp mr-1"
                    type="button"
                    data-toggle="modal"
                    data-target="{{ '#successMessageModal' }}"
                    hidden
                    id="successMessageBtn"
            >
                <i class="fa fa-pencil"></i>
            </button>
            <div class="modal fade" id="{{ 'successMessageModal' }}" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog modal-lg modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">{{ 'Success' }}</h5>
                            <button type="button" class="close" data-dismiss="modal"><span>&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="alert alert-success solid alert-dismissible fade show">
                                <p id="{{ 'successMessage' }}"></p>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary">Add another</button>
                            <button type="button" class="btn btn-danger light dismissMessage" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            <button class="btn btn-primary shadow btn-xs sharp mr-1"
                    type="button"
                    data-toggle="modal"
                    data-target="{{ '#unsuccessfulMessageModal' }}"
                    hidden
                    id="unsuccessfulMessageBtn"
            >
                <i class="fa fa-pencil"></i>
            </button>
            <div class="modal fade" id="{{ 'unsuccessfulMessageModal' }}" tabindex="-1" role="dialog" aria-hidden="true">
                <div class="modal-dialog modal-lg modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">{{ 'Failed' }}</h5>
                            <button type="button" class="close" data-dismiss="modal"><span>&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="alert alert-danger solid alert-dismissible fade show">
                                <p id="{{ 'unsuccessfulMessage' }}"></p>
                                <p>Check all fields and try again</p>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-primary">Try again</button>
                            <button type="button" class="btn btn-danger light dismissMessage" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset('build/vendor/jquery-steps/build/jquery.steps.min.js') }}"></script>
    <!-- Jquery Validation -->
    <script src="{{ asset('build/vendor/jquery-validation/jquery.validate.min.js') }}"></script>
    <!-- Form validate init -->
    <script src="{{ asset('build/js/plugins-init/jquery.validate-init.js') }}"></script>
    <!-- Form Steps -->
    <script src="{{ asset('build/vendor/jquery-smartwizard/dist/js/jquery.smartWizard.js') }}"></script>

    <!-- Form Steps -->
{#    <script src="{{ asset('build/js/filepond.js') }}"></script>#}

    <script>

        $(document).ready(function() {

            let invitationType = '1';
            let numOfInvitees = '1';

            let $labels = $('#inviteeTypeForm label');
            let activeLabel = $labels[0];

            let $dismissMessage = $('.dismissMessage');

            function importInvitations( data ) {
                let url = '';
                    // console.log(data);
                $.ajax
                (
                    {
                        url: url,
                        type: 'GET',
                        headers:
                            {
                                Accept: 'application/json'
                            },
                        data: data,
                        processData: false,  // tell jQuery not to process the data
                        contentType: false,  // tell jQuery not to set contentType
                        beforeSend: function () {

                        },
                        success: function (data) {
                            if
                            (
                                data.success &&
                                data.hasOwnProperty('message')
                            )
                                // showSuccessfulMessage(data.message);
                                console.log(data.message);
                            else
                                // showUnsuccessfulMessage(data.message);
                                console.log(data.message);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            // console.log('failed');
                        },
                        ajaxComplete: function () {

                        }
                    }
                );
            }

            function validateForm(){
                let data = {};
                let formIsValid = true;
                for( let i = 1 ; i <= numOfInvitees; i++ ){
                    let datum = [];
                     $($forms[1]).find('input').each(
                        function () {
                            if (
                                ( $(this).attr('id').includes('firstName') && $(this).val() === '') ||
                                ( $(this).attr('id').includes('lastName') && $(this).val() === '') ||
                                ( $(this).attr('id').includes('title') && $(this).val() === '')
                            )
                                return formIsValid = false;
                            else {
                                if ( $(this).attr('id').includes('-' + String(i)) )
                                    datum.push( {'name': $(this).attr('id'), 'val': $(this).val()} );

                                return formIsValid = true;
                            }
                        }
                    );
                    let select = $($forms[1]).find('select')[i-1];

                    if ($(select).length > 0)
                        datum.push( {'name': $(select).attr('id'), 'val': $(select).val()} );

                    datum.push( {'name': `invitationType-${i}`, 'val': parseInt(invitationType) } );

                    data[`person-${i}`] = datum;
                }

                return [formIsValid, data ];
            }

            function populateInviteePersons (num = 1) {
            }

            function showSuccessfulMessage(message){
                let $messageModalBtn = $('#successMessageBtn')
                let $message = $('#successMessage');
                if ($message.length > 0)
                    $message.html(`
<svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><polyline points="9 11 12 14 22 4"></polyline><path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"></path></svg>
<strong>Success! </strong>${message}`
                    );

                if ($messageModalBtn.length > 0)
                    $messageModalBtn.trigger('click');
            }

            function showUnsuccessfulMessage(message){
                let $messageModalBtn = $('#unsuccessfulMessageBtn')
                let $message = $('#unsuccessfulMessage');
                if ($message.length > 0)
                    $message.html(`
<svg viewBox="0 0 24 24" width="24 " height="24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg>
<strong>Error! </strong> ${message}`
                    );

                if ($messageModalBtn.length > 0)
                    $messageModalBtn.trigger('click');
            }

            populateInviteePersons(1);


            $labels.click(
                function (){
                    if (this !== activeLabel){
                        if ($(activeLabel).hasClass('selected')){
                            $(activeLabel).removeClass('selected');
                            activeLabel = this;
                            $(activeLabel).addClass('selected');
                            invitationType = $(activeLabel).children('input').attr('value');
                        }
                    }
                    if (invitationType === '3') {
                        $customNumber.css('display', 'block');

                        let $numOfInvitees = $('#numOfInvitees');

                        numOfInvitees = $numOfInvitees.val();
                        populateInviteePersons(parseInt(numOfInvitees));

                        $numOfInvitees.change(
                            function () {
                                numOfInvitees = $(this).val();
                                populateInviteePersons(parseInt(numOfInvitees));
                            }
                        );
                    }
                    else {
                        $customNumber.css('display', 'none');
                        numOfInvitees = invitationType;
                        populateInviteePersons(parseInt(numOfInvitees));
                    }
                }
            );

            // $('#btnFinish').click(
            //     function () {
            //         let form = document.querySelector('#form');
            //         let formData = new FormData(form);
            //         // formData.append('file', $('#xlsx')[0].files[0]);
            //         console.log(formData);
            //         importInvitations(formData);
            //     }
            // );

            $dismissMessage.click(
                function () {
                    window.location.href = '{{ path('invitation_management') }}';
                }
            );
        });
    </script>
{% endblock %}
